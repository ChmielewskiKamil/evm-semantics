$ time make test-prove -j 8 -O  > evm-kprove-dry-run-j8-z3-15.txt 2>&1

kevm prove tests/specs/benchmarks/bytes00-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/bytes00-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/bytes00-spec.k
+ shift
+ [[ tests/specs/benchmarks/bytes00-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/bytes00-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/bytes00
+ bug_report_name=kevm-bug-bytes00
+ eventlog_name=tests/specs/benchmarks/bytes00-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/bytes00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/bytes00-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/bytes00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/bytes00-spec.k.log --format-failures
Parse command line options                                   =  0.020s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/bytes00-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.027s
  New scanner: BYTES00-SPEC-RULE-CELLS                       =  1.691s
Parse spec modules [1/1 rules]                               =  5.677s
Apply prover steps                                           =  5.335s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-892-c238190f-8108-448e-8fbe-00869d03a299/spec.kore --spec-module BYTES00-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-892-c238190f-8108-448e-8fbe-00869d03a299/result.kore
Backend                                                      =  1.150s
Cleanup                                                      =  0.109s
Total                                                        = 14.318s
kevm prove tests/specs/benchmarks/address00-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/address00-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/address00-spec.k
+ shift
+ [[ tests/specs/benchmarks/address00-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/address00-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/address00
+ bug_report_name=kevm-bug-address00
+ eventlog_name=tests/specs/benchmarks/address00-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/address00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/address00-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/address00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/address00-spec.k.log --format-failures
Parse command line options                                   =  0.018s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/address00-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.011s
  New scanner: ADDRESS00-SPEC-RULE-CELLS                     =  1.666s
Parse spec modules [1/1 rules]                               =  5.765s
Apply prover steps                                           =  5.459s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-907-44ea070f-392c-43ab-a505-19b258d0c682/spec.kore --spec-module ADDRESS00-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-907-44ea070f-392c-43ab-a505-19b258d0c682/result.kore
Backend                                                      =  1.244s
Cleanup                                                      =  0.106s
Total                                                        = 14.603s
kevm prove tests/specs/benchmarks/ecrecover00-siginvalid-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/ecrecover00-siginvalid-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/ecrecover00-siginvalid-spec.k
+ shift
+ [[ tests/specs/benchmarks/ecrecover00-siginvalid-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/ecrecover00-siginvalid-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/ecrecover00-siginvalid
+ bug_report_name=kevm-bug-ecrecover00-siginvalid
+ eventlog_name=tests/specs/benchmarks/ecrecover00-siginvalid-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecover00-siginvalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecover00-siginvalid-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecover00-siginvalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecover00-siginvalid-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/ecrecover00-siginvalid-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.983s
  New scanner: ECRECOVER00-SIGINVALID-SPEC-RULE-CELLS        =  1.677s
Parse spec modules [1/1 rules]                               =  5.953s
Apply prover steps                                           =  5.561s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-905-b2f54a2c-c867-4de4-88cd-4b1353a238c0/spec.kore --spec-module ECRECOVER00-SIGINVALID-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-905-b2f54a2c-c867-4de4-88cd-4b1353a238c0/result.kore
Backend                                                      =  1.450s
Cleanup                                                      =  0.092s
Total                                                        = 15.061s
kevm prove tests/specs/benchmarks/ecrecover00-sigvalid-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/ecrecover00-sigvalid-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/ecrecover00-sigvalid-spec.k
+ shift
+ [[ tests/specs/benchmarks/ecrecover00-sigvalid-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/ecrecover00-sigvalid-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/ecrecover00-sigvalid
+ bug_report_name=kevm-bug-ecrecover00-sigvalid
+ eventlog_name=tests/specs/benchmarks/ecrecover00-sigvalid-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecover00-sigvalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecover00-sigvalid-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecover00-sigvalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecover00-sigvalid-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/ecrecover00-sigvalid-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.180s
  New scanner: ECRECOVER00-SIGVALID-SPEC-RULE-CELLS          =  1.709s
Parse spec modules [1/1 rules]                               =  6.369s
Apply prover steps                                           =  5.471s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-912-c16a5a4d-9ae5-4319-977f-52416f02c8f1/spec.kore --spec-module ECRECOVER00-SIGVALID-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-912-c16a5a4d-9ae5-4319-977f-52416f02c8f1/result.kore
Backend                                                      =  1.283s
Cleanup                                                      =  0.129s
Total                                                        = 15.454s
kevm prove tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k
+ shift
+ [[ tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/ecrecoverloop02-sig1-invalid
+ bug_report_name=kevm-bug-ecrecoverloop02-sig1-invalid
+ eventlog_name=tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k.log --format-failures
Parse command line options                                   =  0.028s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/ecrecoverloop02-sig1-invalid-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.113s
  New scanner: ECRECOVERLOOP02-SIG1-INVALID-SPEC-RULE-CELLS  =  1.642s
Parse spec modules [1/1 rules]                               =  6.622s
Apply prover steps                                           =  5.449s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-928-955a84e2-983d-4201-99b2-ce0a0dd15459/spec.kore --spec-module ECRECOVERLOOP02-SIG1-INVALID-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-928-955a84e2-983d-4201-99b2-ce0a0dd15459/result.kore
Backend                                                      =  1.209s
Cleanup                                                      =  0.117s
Total                                                        = 15.538s
kevm prove tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k
+ shift
+ [[ tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/ecrecoverloop00-sig0-invalid
+ bug_report_name=kevm-bug-ecrecoverloop00-sig0-invalid
+ eventlog_name=tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k.log --format-failures
Parse command line options                                   =  0.017s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/ecrecoverloop00-sig0-invalid-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.192s
  New scanner: ECRECOVERLOOP00-SIG0-INVALID-SPEC-RULE-CELLS  =  1.678s
Parse spec modules [1/1 rules]                               =  6.147s
Apply prover steps                                           =  5.786s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-906-8ced0347-1185-48bf-b648-ef83ae19e3c0/spec.kore --spec-module ECRECOVERLOOP00-SIG0-INVALID-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-906-8ced0347-1185-48bf-b648-ef83ae19e3c0/result.kore
Backend                                                      =  1.321s
Cleanup                                                      =  0.105s
Total                                                        = 15.568s
kevm prove tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k
+ shift
+ [[ tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/ecrecoverloop02-sig0-invalid
+ bug_report_name=kevm-bug-ecrecoverloop02-sig0-invalid
+ eventlog_name=tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/ecrecoverloop02-sig0-invalid-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.123s
  New scanner: ECRECOVERLOOP02-SIG0-INVALID-SPEC-RULE-CELLS  =  1.612s
Parse spec modules [1/1 rules]                               =  6.244s
Apply prover steps                                           =  5.675s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-945-03a2dddb-6c1e-497c-ae44-4cea2132e4a0/spec.kore --spec-module ECRECOVERLOOP02-SIG0-INVALID-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-945-03a2dddb-6c1e-497c-ae44-4cea2132e4a0/result.kore
Backend                                                      =  1.382s
Cleanup                                                      =  0.097s
Total                                                        = 15.543s
kevm prove tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k
+ shift
+ [[ tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/ecrecoverloop00-sigs-valid
+ bug_report_name=kevm-bug-ecrecoverloop00-sigs-valid
+ eventlog_name=tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k.log --format-failures
Parse command line options                                   =  0.023s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/ecrecoverloop00-sigs-valid-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.077s
  New scanner: ECRECOVERLOOP00-SIGS-VALID-SPEC-RULE-CELLS    =  1.591s
Parse spec modules [1/1 rules]                               =  6.276s
Apply prover steps                                           =  6.038s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-936-41e68785-8a2a-4cfb-8afd-93421a1f7fa1/spec.kore --spec-module ECRECOVERLOOP00-SIGS-VALID-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-18-936-41e68785-8a2a-4cfb-8afd-93421a1f7fa1/result.kore
Backend                                                      =  1.247s
Cleanup                                                      =  0.090s
Total                                                        = 15.751s
kevm prove tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k
+ shift
+ [[ tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/ecrecoverloop02-sigs-valid
+ bug_report_name=kevm-bug-ecrecoverloop02-sigs-valid
+ eventlog_name=tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k.log --format-failures
Parse command line options                                   =  0.034s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/ecrecoverloop02-sigs-valid-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.944s
  New scanner: ECRECOVERLOOP02-SIGS-VALID-SPEC-RULE-CELLS    =  1.978s
Parse spec modules [1/1 rules]                               =  6.284s
Apply prover steps                                           =  5.888s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-33-897-631fc7f0-2165-47fa-8526-f08d7b64d0be/spec.kore --spec-module ECRECOVERLOOP02-SIGS-VALID-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-33-897-631fc7f0-2165-47fa-8526-f08d7b64d0be/result.kore
Backend                                                      =  1.278s
Cleanup                                                      =  0.124s
Total                                                        = 15.552s
kevm prove tests/specs/benchmarks/encodepacked-keccak01-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/encodepacked-keccak01-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/encodepacked-keccak01-spec.k
+ shift
+ [[ tests/specs/benchmarks/encodepacked-keccak01-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/encodepacked-keccak01-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/encodepacked-keccak01
+ bug_report_name=kevm-bug-encodepacked-keccak01
+ eventlog_name=tests/specs/benchmarks/encodepacked-keccak01-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/encodepacked-keccak01-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/encodepacked-keccak01-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/encodepacked-keccak01-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/encodepacked-keccak01-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/encodepacked-keccak01-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.831s
  New scanner: ENCODEPACKED-KECCAK01-SPEC-RULE-CELLS         =  1.752s
Parse spec modules [1/1 rules]                               =  6.492s
Apply prover steps                                           =  5.372s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-553-92361bab-c6c8-4ea1-b9ba-624538550b81/spec.kore --spec-module ENCODEPACKED-KECCAK01-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-553-92361bab-c6c8-4ea1-b9ba-624538550b81/result.kore
Backend                                                      =  1.433s
Cleanup                                                      =  0.105s
Total                                                        = 15.254s
kevm prove tests/specs/benchmarks/encode-keccak00-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/encode-keccak00-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/encode-keccak00-spec.k
+ shift
+ [[ tests/specs/benchmarks/encode-keccak00-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/encode-keccak00-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/encode-keccak00
+ bug_report_name=kevm-bug-encode-keccak00
+ eventlog_name=tests/specs/benchmarks/encode-keccak00-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/encode-keccak00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/encode-keccak00-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/encode-keccak00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/encode-keccak00-spec.k.log --format-failures
Parse command line options                                   =  0.034s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/encode-keccak00-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.956s
  New scanner: ENCODE-KECCAK00-SPEC-RULE-CELLS               =  1.900s
Parse spec modules [1/1 rules]                               =  6.200s
Apply prover steps                                           =  5.962s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-196-34fd6d0f-3c40-46e0-bd8f-7b595c89e52a/spec.kore --spec-module ENCODE-KECCAK00-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-196-34fd6d0f-3c40-46e0-bd8f-7b595c89e52a/result.kore
Backend                                                      =  1.460s
Cleanup                                                      =  0.115s
Total                                                        = 15.727s
kevm prove tests/specs/benchmarks/keccak00-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/keccak00-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/keccak00-spec.k
+ shift
+ [[ tests/specs/benchmarks/keccak00-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/keccak00-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/keccak00
+ bug_report_name=kevm-bug-keccak00
+ eventlog_name=tests/specs/benchmarks/keccak00-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/keccak00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/keccak00-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/keccak00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/keccak00-spec.k.log --format-failures
Parse command line options                                   =  0.031s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/keccak00-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.087s
  New scanner: KECCAK00-SPEC-RULE-CELLS                      =  1.743s
Parse spec modules [1/1 rules]                               =  6.401s
Apply prover steps                                           =  5.318s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-950-bfaa2072-772a-4da3-999a-7c777429d06f/spec.kore --spec-module KECCAK00-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-950-bfaa2072-772a-4da3-999a-7c777429d06f/result.kore
Backend                                                      =  1.388s
Cleanup                                                      =  0.112s
Total                                                        = 15.337s
kevm prove tests/specs/benchmarks/overflow00-nooverflow-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/overflow00-nooverflow-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/overflow00-nooverflow-spec.k
+ shift
+ [[ tests/specs/benchmarks/overflow00-nooverflow-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/overflow00-nooverflow-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/overflow00-nooverflow
+ bug_report_name=kevm-bug-overflow00-nooverflow
+ eventlog_name=tests/specs/benchmarks/overflow00-nooverflow-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/overflow00-nooverflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/overflow00-nooverflow-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/overflow00-nooverflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/overflow00-nooverflow-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/overflow00-nooverflow-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.035s
  New scanner: OVERFLOW00-NOOVERFLOW-SPEC-RULE-CELLS         =  1.772s
Parse spec modules [1/1 rules]                               =  6.319s
Apply prover steps                                           =  5.611s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-915-752df359-6baa-4507-8f7c-21e98564ddc7/spec.kore --spec-module OVERFLOW00-NOOVERFLOW-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-915-752df359-6baa-4507-8f7c-21e98564ddc7/result.kore
Backend                                                      =  1.366s
Cleanup                                                      =  0.120s
Total                                                        = 15.473s
kevm prove tests/specs/benchmarks/overflow00-overflow-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/overflow00-overflow-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/overflow00-overflow-spec.k
+ shift
+ [[ tests/specs/benchmarks/overflow00-overflow-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/overflow00-overflow-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/overflow00-overflow
+ bug_report_name=kevm-bug-overflow00-overflow
+ eventlog_name=tests/specs/benchmarks/overflow00-overflow-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/overflow00-overflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/overflow00-overflow-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/overflow00-overflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/overflow00-overflow-spec.k.log --format-failures
Parse command line options                                   =  0.017s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/overflow00-overflow-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.134s
  New scanner: OVERFLOW00-OVERFLOW-SPEC-RULE-CELLS           =  1.706s
Parse spec modules [1/1 rules]                               =  6.286s
Apply prover steps                                           =  5.560s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-995-0da04a4c-c6f3-4d67-a3e2-6adbb97b2e77/spec.kore --spec-module OVERFLOW00-OVERFLOW-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-995-0da04a4c-c6f3-4d67-a3e2-6adbb97b2e77/result.kore
Backend                                                      =  1.306s
Cleanup                                                      =  0.102s
Total                                                        = 15.405s
kevm prove tests/specs/benchmarks/requires01-a0gt0-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/requires01-a0gt0-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/requires01-a0gt0-spec.k
+ shift
+ [[ tests/specs/benchmarks/requires01-a0gt0-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/requires01-a0gt0-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/requires01-a0gt0
+ bug_report_name=kevm-bug-requires01-a0gt0
+ eventlog_name=tests/specs/benchmarks/requires01-a0gt0-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/requires01-a0gt0-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/requires01-a0gt0-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/requires01-a0gt0-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/requires01-a0gt0-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/requires01-a0gt0-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.147s
  New scanner: REQUIRES01-A0GT0-SPEC-RULE-CELLS              =  1.836s
Parse spec modules [1/1 rules]                               =  6.409s
Apply prover steps                                           =  5.475s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-35-145-5cd3f0ff-2153-49ce-baf6-0aa793ed310b/spec.kore --spec-module REQUIRES01-A0GT0-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-35-145-5cd3f0ff-2153-49ce-baf6-0aa793ed310b/result.kore
Backend                                                      =  1.327s
Cleanup                                                      =  0.094s
Total                                                        = 15.474s
kevm prove tests/specs/benchmarks/functional-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/functional-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/functional-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/functional-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/functional-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/functional-spec.k
+ shift
+ [[ tests/specs/benchmarks/functional-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/functional-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/functional
+ bug_report_name=kevm-bug-functional
+ eventlog_name=tests/specs/benchmarks/functional-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/functional-spec/haskell tests/specs/benchmarks/functional-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/functional-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/functional-spec/haskell tests/specs/benchmarks/functional-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/functional-spec.k.log --format-failures
Parse command line options                                   =  0.019s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/functional-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [101 modules]                                  =  2.101s
  New scanner: FUNCTIONAL-SPEC-RULE-CELLS                    =  1.760s
Parse spec modules [17/17 rules]                             =  6.090s
Apply prover steps                                           =  6.210s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/functional-spec/haskell/functional-spec-kompiled/definition.kore --module FUNCTIONAL-SPEC-SYNTAX --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-838-bcf42834-aaa7-423b-9fc4-ffd73e5c6d88/spec.kore --spec-module FUNCTIONAL-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-34-838-bcf42834-aaa7-423b-9fc4-ffd73e5c6d88/result.kore
Backend                                                      =  1.350s
Cleanup                                                      =  0.088s
Total                                                        = 15.858s
[Warning] Compiler: Variable 'B' defined but not used. Prefix variable name
with underscore if this is intentional.
	Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/functional-spec.k)
	Location(18,34,18,35)
kevm prove tests/specs/benchmarks/staticarray00-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/staticarray00-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/staticarray00-spec.k
+ shift
+ [[ tests/specs/benchmarks/staticarray00-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/staticarray00-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/staticarray00
+ bug_report_name=kevm-bug-staticarray00
+ eventlog_name=tests/specs/benchmarks/staticarray00-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/staticarray00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/staticarray00-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/staticarray00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/staticarray00-spec.k.log --format-failures
Parse command line options                                   =  0.024s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/staticarray00-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.893s
  New scanner: STATICARRAY00-SPEC-RULE-CELLS                 =  1.873s
Parse spec modules [1/1 rules]                               =  5.818s
Apply prover steps                                           =  5.373s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-359-2d7edd91-268b-45ad-8153-d5b1769b36f6/spec.kore --spec-module STATICARRAY00-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-359-2d7edd91-268b-45ad-8153-d5b1769b36f6/result.kore
Backend                                                      =  1.256s
Cleanup                                                      =  0.135s
Total                                                        = 14.499s
kevm prove tests/specs/benchmarks/requires01-a0le0-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/requires01-a0le0-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/requires01-a0le0-spec.k
+ shift
+ [[ tests/specs/benchmarks/requires01-a0le0-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/requires01-a0le0-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/requires01-a0le0
+ bug_report_name=kevm-bug-requires01-a0le0
+ eventlog_name=tests/specs/benchmarks/requires01-a0le0-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/requires01-a0le0-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/requires01-a0le0-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/requires01-a0le0-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/requires01-a0le0-spec.k.log --format-failures
Parse command line options                                   =  0.026s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/requires01-a0le0-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.834s
  New scanner: REQUIRES01-A0LE0-SPEC-RULE-CELLS              =  1.996s
Parse spec modules [1/1 rules]                               =  5.985s
Apply prover steps                                           =  5.522s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-129-e1356784-97cd-4217-affc-0fc78830e2d1/spec.kore --spec-module REQUIRES01-A0LE0-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-129-e1356784-97cd-4217-affc-0fc78830e2d1/result.kore
Backend                                                      =  1.254s
Cleanup                                                      =  0.130s
Total                                                        = 14.751s
kevm prove tests/specs/benchmarks/staticloop00-a0lt10-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/staticloop00-a0lt10-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/staticloop00-a0lt10-spec.k
+ shift
+ [[ tests/specs/benchmarks/staticloop00-a0lt10-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/staticloop00-a0lt10-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/staticloop00-a0lt10
+ bug_report_name=kevm-bug-staticloop00-a0lt10
+ eventlog_name=tests/specs/benchmarks/staticloop00-a0lt10-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/staticloop00-a0lt10-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/staticloop00-a0lt10-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/staticloop00-a0lt10-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/staticloop00-a0lt10-spec.k.log --format-failures
Parse command line options                                   =  0.024s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/staticloop00-a0lt10-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.854s
  New scanner: STATICLOOP00-A0LT10-SPEC-RULE-CELLS           =  1.840s
Parse spec modules [1/1 rules]                               =  5.813s
Apply prover steps                                           =  5.901s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-428-a2c23290-4cab-4f01-a326-b08e1a53244b/spec.kore --spec-module STATICLOOP00-A0LT10-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-428-a2c23290-4cab-4f01-a326-b08e1a53244b/result.kore
Backend                                                      =  1.356s
Cleanup                                                      =  0.088s
Total                                                        = 15.036s
kevm prove tests/specs/benchmarks/storagevar01-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/storagevar01-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/storagevar01-spec.k
+ shift
+ [[ tests/specs/benchmarks/storagevar01-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/storagevar01-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/storagevar01
+ bug_report_name=kevm-bug-storagevar01
+ eventlog_name=tests/specs/benchmarks/storagevar01-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar01-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar01-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar01-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar01-spec.k.log --format-failures
Parse command line options                                   =  0.024s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/storagevar01-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.044s
  New scanner: STORAGEVAR01-SPEC-RULE-CELLS                  =  1.670s
Parse spec modules [1/1 rules]                               =  6.010s
Apply prover steps                                           =  5.172s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-904-331309a6-88d5-48b2-9118-2d327754a17d/spec.kore --spec-module STORAGEVAR01-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-904-331309a6-88d5-48b2-9118-2d327754a17d/result.kore
Backend                                                      =  1.344s
Cleanup                                                      =  0.101s
Total                                                        = 14.695s
kevm prove tests/specs/benchmarks/storagevar00-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/storagevar00-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/storagevar00-spec.k
+ shift
+ [[ tests/specs/benchmarks/storagevar00-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/storagevar00-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/storagevar00
+ bug_report_name=kevm-bug-storagevar00
+ eventlog_name=tests/specs/benchmarks/storagevar00-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar00-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar00-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar00-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/storagevar00-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  1.991s
  New scanner: STORAGEVAR00-SPEC-RULE-CELLS                  =  1.753s
Parse spec modules [1/1 rules]                               =  5.936s
Apply prover steps                                           =  5.573s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-770-456dd546-3aa8-4842-a7dd-597aa4d72e3d/spec.kore --spec-module STORAGEVAR00-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-770-456dd546-3aa8-4842-a7dd-597aa4d72e3d/result.kore
Backend                                                      =  1.321s
Cleanup                                                      =  0.096s
Total                                                        = 14.939s
kevm prove tests/specs/benchmarks/storagevar02-nooverflow-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/storagevar02-nooverflow-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/storagevar02-nooverflow-spec.k
+ shift
+ [[ tests/specs/benchmarks/storagevar02-nooverflow-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/storagevar02-nooverflow-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/storagevar02-nooverflow
+ bug_report_name=kevm-bug-storagevar02-nooverflow
+ eventlog_name=tests/specs/benchmarks/storagevar02-nooverflow-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar02-nooverflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar02-nooverflow-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar02-nooverflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar02-nooverflow-spec.k.log --format-failures
Parse command line options                                   =  0.018s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/storagevar02-nooverflow-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.022s
  New scanner: STORAGEVAR02-NOOVERFLOW-SPEC-RULE-CELLS       =  1.668s
Parse spec modules [1/1 rules]                               =  5.869s
Apply prover steps                                           =  5.597s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-893-e4674c2b-3f07-4fc0-a8b8-e8caf7702e5e/spec.kore --spec-module STORAGEVAR02-NOOVERFLOW-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-50-893-e4674c2b-3f07-4fc0-a8b8-e8caf7702e5e/result.kore
Backend                                                      =  1.378s
Cleanup                                                      =  0.097s
Total                                                        = 14.981s
kevm prove tests/specs/benchmarks/storagevar03-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/storagevar03-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/storagevar03-spec.k
+ shift
+ [[ tests/specs/benchmarks/storagevar03-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/storagevar03-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/storagevar03
+ bug_report_name=kevm-bug-storagevar03
+ eventlog_name=tests/specs/benchmarks/storagevar03-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar03-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar03-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar03-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar03-spec.k.log --format-failures
Parse command line options                                   =  0.018s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/storagevar03-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.092s
  New scanner: STORAGEVAR03-SPEC-RULE-CELLS                  =  1.830s
Parse spec modules [1/1 rules]                               =  5.738s
Apply prover steps                                           =  5.541s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-51-245-d0b22623-a69e-4656-8af4-bebff7233898/spec.kore --spec-module STORAGEVAR03-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-51-245-d0b22623-a69e-4656-8af4-bebff7233898/result.kore
Backend                                                      =  1.315s
Cleanup                                                      =  0.111s
Total                                                        = 14.815s
kevm prove tests/specs/benchmarks/storagevar02-overflow-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/benchmarks/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/benchmarks/storagevar02-overflow-spec.k --format-failures
+ backend_dir=tests/specs/benchmarks/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/benchmarks/storagevar02-overflow-spec.k
+ shift
+ [[ tests/specs/benchmarks/storagevar02-overflow-spec.k == \- ]]
+ [[ -f tests/specs/benchmarks/storagevar02-overflow-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/benchmarks/storagevar02-overflow
+ bug_report_name=kevm-bug-storagevar02-overflow
+ eventlog_name=tests/specs/benchmarks/storagevar02-overflow-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar02-overflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar02-overflow-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/benchmarks/verification/haskell tests/specs/benchmarks/storagevar02-overflow-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/benchmarks/storagevar02-overflow-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/storagevar02-overflow-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/benchmarks/verification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [100 modules]                                  =  2.782s
  New scanner: STORAGEVAR02-OVERFLOW-SPEC-RULE-CELLS         =  2.208s
Parse spec modules [1/1 rules]                               =  6.367s
Apply prover steps                                           =  4.921s
kore-exec /home/radu/work/evm-semantics/./tests/specs/benchmarks/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-51-097-354a6fad-673f-498c-a47d-2c733229d2cd/spec.kore --spec-module STORAGEVAR02-OVERFLOW-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-43-51-097-354a6fad-673f-498c-a47d-2c733229d2cd/result.kore
Backend                                                      =  1.222s
Cleanup                                                      =  0.100s
Total                                                        = 15.413s
kevm prove tests/specs/functional/merkle-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/functional/merkle-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/functional/merkle-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/functional/merkle-spec.k --format-failures
+ backend_dir=tests/specs/functional/merkle-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/functional/merkle-spec.k
+ shift
+ [[ tests/specs/functional/merkle-spec.k == \- ]]
+ [[ -f tests/specs/functional/merkle-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/functional/merkle
+ bug_report_name=kevm-bug-merkle
+ eventlog_name=tests/specs/functional/merkle-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/functional/merkle-spec/haskell tests/specs/functional/merkle-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/merkle-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/functional/merkle-spec/haskell tests/specs/functional/merkle-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/merkle-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/functional/merkle-spec.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Outer parsing [82 modules]                                   =  1.604s
  New scanner: MERKLE-SPEC-RULE-CELLS                        =  1.831s
Parse spec modules [14/14 rules]                             =  6.972s
Apply prover steps                                           =  5.449s
kore-exec /home/radu/work/evm-semantics/./tests/specs/functional/merkle-spec/haskell/merkle-spec-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-107-e2c97085-48d7-4e52-8630-37a2a673d3c3/spec.kore --spec-module MERKLE-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-107-e2c97085-48d7-4e52-8630-37a2a673d3c3/result.kore
Backend                                                      =  0.950s
Cleanup                                                      =  0.077s
Total                                                        = 15.073s
kevm prove tests/specs/functional/storageRoot-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/functional/storageRoot-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/functional/storageRoot-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/functional/storageRoot-spec.k --format-failures
+ backend_dir=tests/specs/functional/storageRoot-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/functional/storageRoot-spec.k
+ shift
+ [[ tests/specs/functional/storageRoot-spec.k == \- ]]
+ [[ -f tests/specs/functional/storageRoot-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/functional/storageRoot
+ bug_report_name=kevm-bug-storageRoot
+ eventlog_name=tests/specs/functional/storageRoot-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/functional/storageRoot-spec/haskell tests/specs/functional/storageRoot-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/storageRoot-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/functional/storageRoot-spec/haskell tests/specs/functional/storageRoot-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/storageRoot-spec.k.log --format-failures
Parse command line options                                   =  0.017s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/functional/storageRoot-spec.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Outer parsing [90 modules]                                   =  1.850s
  New scanner: STORAGEROOT-SPEC-RULE-CELLS                   =  1.853s
Parse spec modules [8/8 rules]                               =  6.407s
Apply prover steps                                           =  6.063s
kore-exec /home/radu/work/evm-semantics/./tests/specs/functional/storageRoot-spec/haskell/storageRoot-spec-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-203-aab65c98-baa0-47c0-a1b2-4464437a1247/spec.kore --spec-module STORAGEROOT-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-203-aab65c98-baa0-47c0-a1b2-4464437a1247/result.kore
Backend                                                      =  1.137s
Cleanup                                                      =  0.102s
Total                                                        = 15.576s
kevm prove tests/specs/functional/lemmas-no-smt-spec.k  --backend haskell --format-failures --haskell-backend-command "kore-exec --smt=none" \
    --directory tests/specs/functional/lemmas-no-smt-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 8 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 7 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 4 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/functional/lemmas-no-smt-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 4 -le 0 ]]
+ set -- tests/specs/functional/lemmas-no-smt-spec.k --format-failures --haskell-backend-command 'kore-exec --smt=none'
+ backend_dir=tests/specs/functional/lemmas-no-smt-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/functional/lemmas-no-smt-spec.k
+ shift
+ [[ tests/specs/functional/lemmas-no-smt-spec.k == \- ]]
+ [[ -f tests/specs/functional/lemmas-no-smt-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures --haskell-backend-command 'kore-exec --smt=none'
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/functional/lemmas-no-smt
+ bug_report_name=kevm-bug-lemmas-no-smt
+ eventlog_name=tests/specs/functional/lemmas-no-smt-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/functional/lemmas-no-smt-spec/haskell tests/specs/functional/lemmas-no-smt-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/lemmas-no-smt-spec.k.log --format-failures --haskell-backend-command 'kore-exec --smt=none'
+ false
+ kprovex --directory tests/specs/functional/lemmas-no-smt-spec/haskell tests/specs/functional/lemmas-no-smt-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/lemmas-no-smt-spec.k.log --format-failures --haskell-backend-command 'kore-exec --smt=none'
Parse command line options                                   =  0.025s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/functional/lemmas-no-smt-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [95 modules]                                   =  1.810s
  New scanner: LEMMAS-NO-SMT-SPEC-RULE-CELLS                 =  2.022s
Parse spec modules [13/13 rules]                             =  6.942s
Apply prover steps                                           =  6.681s
kore-exec --smt=none /home/radu/work/evm-semantics/./tests/specs/functional/lemmas-no-smt-spec/haskell/lemmas-no-smt-spec-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-05-478-ba0293ff-ce81-4573-abb2-3fcc364d683f/spec.kore --spec-module LEMMAS-NO-SMT-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-05-478-ba0293ff-ce81-4573-abb2-3fcc364d683f/result.kore
Backend                                                      =  1.274s
Cleanup                                                      =  0.122s
Total                                                        = 16.854s
kevm prove tests/specs/functional/infinite-gas-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/functional/infinite-gas-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/functional/infinite-gas-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/functional/infinite-gas-spec.k --format-failures
+ backend_dir=tests/specs/functional/infinite-gas-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/functional/infinite-gas-spec.k
+ shift
+ [[ tests/specs/functional/infinite-gas-spec.k == \- ]]
+ [[ -f tests/specs/functional/infinite-gas-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/functional/infinite-gas
+ bug_report_name=kevm-bug-infinite-gas
+ eventlog_name=tests/specs/functional/infinite-gas-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/functional/infinite-gas-spec/haskell tests/specs/functional/infinite-gas-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/infinite-gas-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/functional/infinite-gas-spec/haskell tests/specs/functional/infinite-gas-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/infinite-gas-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/functional/infinite-gas-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [88 modules]                                   =  1.662s
  New scanner: INFINITE-GAS-SPEC-RULE-CELLS                  =  2.019s
Parse spec modules [54/54 rules]                             =  9.164s
Apply prover steps                                           =  4.765s
kore-exec /home/radu/work/evm-semantics/./tests/specs/functional/infinite-gas-spec/haskell/infinite-gas-spec-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-05-455-7f2875fa-c055-469c-b03b-4d46f21db6ba/spec.kore --spec-module INFINITE-GAS-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-05-455-7f2875fa-c055-469c-b03b-4d46f21db6ba/result.kore
Backend                                                      =  1.215s
Cleanup                                                      =  0.140s
Total                                                        = 16.967s
kevm prove tests/specs/erc20/ds/allowance-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/allowance-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/allowance-spec.k
+ shift
+ [[ tests/specs/erc20/ds/allowance-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/allowance-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/allowance
+ bug_report_name=kevm-bug-allowance
+ eventlog_name=tests/specs/erc20/ds/allowance-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/allowance-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/allowance-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/allowance-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/allowance-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/allowance-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.022s
  New scanner: ALLOWANCE-SPEC-RULE-CELLS                     =  1.990s
Parse spec modules [1/1 rules]                               =  7.278s
Apply prover steps                                           =  5.511s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-387-c468872e-1943-4072-850c-68feb2a9f3c1/spec.kore --spec-module ALLOWANCE-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-387-c468872e-1943-4072-850c-68feb2a9f3c1/result.kore
Backend                                                      =  1.270s
Cleanup                                                      =  0.100s
Total                                                        = 16.203s
kevm prove tests/specs/erc20/ds/approve-failure-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/approve-failure-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/approve-failure-spec.k
+ shift
+ [[ tests/specs/erc20/ds/approve-failure-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/approve-failure-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/approve-failure
+ bug_report_name=kevm-bug-approve-failure
+ eventlog_name=tests/specs/erc20/ds/approve-failure-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/approve-failure-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/approve-failure-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/approve-failure-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/approve-failure-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/approve-failure-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.067s
  New scanner: APPROVE-FAILURE-SPEC-RULE-CELLS               =  2.015s
Parse spec modules [1/1 rules]                               =  7.946s
Apply prover steps                                           =  5.299s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-563-b8d24719-7141-4a51-a976-f67febc2a77d/spec.kore --spec-module APPROVE-FAILURE-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-563-b8d24719-7141-4a51-a976-f67febc2a77d/result.kore
Backend                                                      =  1.198s
Cleanup                                                      =  0.099s
Total                                                        = 16.631s
kevm prove tests/specs/functional/lemmas-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/functional/lemmas-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/functional/lemmas-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/functional/lemmas-spec.k --format-failures
+ backend_dir=tests/specs/functional/lemmas-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/functional/lemmas-spec.k
+ shift
+ [[ tests/specs/functional/lemmas-spec.k == \- ]]
+ [[ -f tests/specs/functional/lemmas-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/functional/lemmas
+ bug_report_name=kevm-bug-lemmas
+ eventlog_name=tests/specs/functional/lemmas-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/functional/lemmas-spec/haskell tests/specs/functional/lemmas-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/lemmas-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/functional/lemmas-spec/haskell tests/specs/functional/lemmas-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/functional/lemmas-spec.k.log --format-failures
Parse command line options                                   =  0.027s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/functional/lemmas-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [95 modules]                                   =  1.919s
  New scanner: LEMMAS-SPEC-RULE-CELLS                        =  1.788s
Parse spec modules [49/49 rules]                             =  9.657s
Apply prover steps                                           =  4.794s
kore-exec /home/radu/work/evm-semantics/./tests/specs/functional/lemmas-spec/haskell/lemmas-spec-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-031-77eee691-4c2a-439a-b941-fcc13a273d60/spec.kore --spec-module LEMMAS-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-06-031-77eee691-4c2a-439a-b941-fcc13a273d60/result.kore
Backend                                                      =  1.213s
Cleanup                                                      =  0.114s
Total                                                        = 17.724s
kevm prove tests/specs/erc20/ds/approve-success-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/approve-success-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/approve-success-spec.k
+ shift
+ [[ tests/specs/erc20/ds/approve-success-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/approve-success-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/approve-success
+ bug_report_name=kevm-bug-approve-success
+ eventlog_name=tests/specs/erc20/ds/approve-success-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/approve-success-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/approve-success-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/approve-success-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/approve-success-spec.k.log --format-failures
Parse command line options                                   =  0.024s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/approve-success-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.015s
  New scanner: APPROVE-SUCCESS-SPEC-RULE-CELLS               =  2.666s
Parse spec modules [1/1 rules]                               =  8.695s
Apply prover steps                                           =  4.887s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-07-028-2ac5ccd5-0955-4a26-8b12-ac7b739e8bad/spec.kore --spec-module APPROVE-SUCCESS-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-07-028-2ac5ccd5-0955-4a26-8b12-ac7b739e8bad/result.kore
Backend                                                      =  1.247s
Cleanup                                                      =  0.084s
Total                                                        = 16.952s
kevm prove tests/specs/erc20/ds/balanceOf-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/balanceOf-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/balanceOf-spec.k
+ shift
+ [[ tests/specs/erc20/ds/balanceOf-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/balanceOf-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/balanceOf
+ bug_report_name=kevm-bug-balanceOf
+ eventlog_name=tests/specs/erc20/ds/balanceOf-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/balanceOf-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/balanceOf-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/balanceOf-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/balanceOf-spec.k.log --format-failures
Parse command line options                                   =  0.027s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/balanceOf-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.006s
  New scanner: BALANCEOF-SPEC-RULE-CELLS                     =  2.273s
Parse spec modules [1/1 rules]                               =  5.078s
Apply prover steps                                           =  6.059s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-21-723-cc466e72-188e-448d-9d22-e558d1e277c1/spec.kore --spec-module BALANCEOF-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-21-723-cc466e72-188e-448d-9d22-e558d1e277c1/result.kore
Backend                                                      =  0.788s
Cleanup                                                      =  0.065s
Total                                                        = 14.023s
kevm prove tests/specs/erc20/ds/totalSupply-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/totalSupply-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/totalSupply-spec.k
+ shift
+ [[ tests/specs/erc20/ds/totalSupply-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/totalSupply-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/totalSupply
+ bug_report_name=kevm-bug-totalSupply
+ eventlog_name=tests/specs/erc20/ds/totalSupply-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/totalSupply-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/totalSupply-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/totalSupply-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/totalSupply-spec.k.log --format-failures
Parse command line options                                   =  0.031s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/totalSupply-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.979s
  New scanner: TOTALSUPPLY-SPEC-RULE-CELLS                   =  2.214s
Parse spec modules [1/1 rules]                               =  5.573s
Apply prover steps                                           =  5.262s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-22-507-67e429d2-e51b-48f8-a5f8-b282235c4e6d/spec.kore --spec-module TOTALSUPPLY-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-22-507-67e429d2-e51b-48f8-a5f8-b282235c4e6d/result.kore
Backend                                                      =  0.862s
Cleanup                                                      =  0.069s
Total                                                        = 13.776s
kevm prove tests/specs/erc20/ds/transfer-failure-1-b-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transfer-failure-1-b-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transfer-failure-1-b-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transfer-failure-1-b-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transfer-failure-1-b-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transfer-failure-1-b
+ bug_report_name=kevm-bug-transfer-failure-1-b
+ eventlog_name=tests/specs/erc20/ds/transfer-failure-1-b-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-1-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-1-b-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-1-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-1-b-spec.k.log --format-failures
Parse command line options                                   =  0.029s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transfer-failure-1-b-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.898s
  New scanner: TRANSFER-FAILURE-1-B-SPEC-RULE-CELLS          =  2.017s
Parse spec modules [1/1 rules]                               =  6.550s
Apply prover steps                                           =  4.629s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-23-058-e7d0cb6b-eb77-44d4-a01c-72dcbaa95335/spec.kore --spec-module TRANSFER-FAILURE-1-B-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-23-058-e7d0cb6b-eb77-44d4-a01c-72dcbaa95335/result.kore
Backend                                                      =  1.085s
Cleanup                                                      =  0.119s
Total                                                        = 14.310s
kevm prove tests/specs/erc20/ds/transfer-failure-1-a-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transfer-failure-1-a-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transfer-failure-1-a-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transfer-failure-1-a-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transfer-failure-1-a-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transfer-failure-1-a
+ bug_report_name=kevm-bug-transfer-failure-1-a
+ eventlog_name=tests/specs/erc20/ds/transfer-failure-1-a-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-1-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-1-a-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-1-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-1-a-spec.k.log --format-failures
Parse command line options                                   =  0.029s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transfer-failure-1-a-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.969s
  New scanner: TRANSFER-FAILURE-1-A-SPEC-RULE-CELLS          =  2.052s
Parse spec modules [1/1 rules]                               =  6.996s
Apply prover steps                                           =  4.740s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-22-949-d423f656-e85b-4523-9fcc-766c9e59ce5c/spec.kore --spec-module TRANSFER-FAILURE-1-A-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-22-949-d423f656-e85b-4523-9fcc-766c9e59ce5c/result.kore
Backend                                                      =  1.223s
Cleanup                                                      =  0.111s
Total                                                        = 15.068s
kevm prove tests/specs/erc20/ds/transfer-failure-2-a-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transfer-failure-2-a-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transfer-failure-2-a-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transfer-failure-2-a-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transfer-failure-2-a-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transfer-failure-2-a
+ bug_report_name=kevm-bug-transfer-failure-2-a
+ eventlog_name=tests/specs/erc20/ds/transfer-failure-2-a-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-2-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-2-a-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-2-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-2-a-spec.k.log --format-failures
Parse command line options                                   =  0.024s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transfer-failure-2-a-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.933s
  New scanner: TRANSFER-FAILURE-2-A-SPEC-RULE-CELLS          =  2.074s
Parse spec modules [1/1 rules]                               =  6.437s
Apply prover steps                                           =  4.543s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-23-777-0b02c49b-becd-4d27-866a-b5269dacd039/spec.kore --spec-module TRANSFER-FAILURE-2-A-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-23-777-0b02c49b-becd-4d27-866a-b5269dacd039/result.kore
Backend                                                      =  1.404s
Cleanup                                                      =  0.100s
Total                                                        = 14.441s
kevm prove tests/specs/erc20/ds/transfer-failure-2-b-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transfer-failure-2-b-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transfer-failure-2-b-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transfer-failure-2-b-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transfer-failure-2-b-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transfer-failure-2-b
+ bug_report_name=kevm-bug-transfer-failure-2-b
+ eventlog_name=tests/specs/erc20/ds/transfer-failure-2-b-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-2-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-2-b-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-2-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-2-b-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transfer-failure-2-b-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.811s
  New scanner: TRANSFER-FAILURE-2-B-SPEC-RULE-CELLS          =  2.187s
Parse spec modules [1/1 rules]                               =  6.496s
Apply prover steps                                           =  4.646s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-24-386-58c2189d-aab4-4c56-adcc-659fef0a0cd2/spec.kore --spec-module TRANSFER-FAILURE-2-B-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-24-386-58c2189d-aab4-4c56-adcc-659fef0a0cd2/result.kore
Backend                                                      =  1.270s
Cleanup                                                      =  0.104s
Total                                                        = 14.349s
kevm prove tests/specs/erc20/ds/transfer-failure-1-c-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transfer-failure-1-c-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transfer-failure-1-c-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transfer-failure-1-c-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transfer-failure-1-c-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transfer-failure-1-c
+ bug_report_name=kevm-bug-transfer-failure-1-c
+ eventlog_name=tests/specs/erc20/ds/transfer-failure-1-c-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-1-c-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-1-c-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-failure-1-c-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-failure-1-c-spec.k.log --format-failures
Parse command line options                                   =  0.025s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transfer-failure-1-c-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.771s
  New scanner: TRANSFER-FAILURE-1-C-SPEC-RULE-CELLS          =  1.983s
Parse spec modules [1/1 rules]                               =  7.150s
Apply prover steps                                           =  4.534s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-23-121-bafcb499-6b1a-457a-aa64-30ff483a4883/spec.kore --spec-module TRANSFER-FAILURE-1-C-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-23-121-bafcb499-6b1a-457a-aa64-30ff483a4883/result.kore
Backend                                                      =  1.246s
Cleanup                                                      =  0.075s
Total                                                        = 15.801s
kevm prove tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-failure-1-a
+ bug_report_name=kevm-bug-transferFrom-failure-1-a
+ eventlog_name=tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k.log --format-failures
Parse command line options                                   =  0.023s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-failure-1-a-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.858s
  New scanner: TRANSFERFROM-FAILURE-1-A-SPEC-RULE-CELLS      =  2.030s
Parse spec modules [1/1 rules]                               = 13.018s
Apply prover steps                                           =  4.892s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-24-535-7f9977c1-3287-4eea-b75a-5321f7da1af3/spec.kore --spec-module TRANSFERFROM-FAILURE-1-A-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-24-535-7f9977c1-3287-4eea-b75a-5321f7da1af3/result.kore
Backend                                                      =  1.428s
Cleanup                                                      =  0.116s
Total                                                        = 21.335s
kevm prove tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-failure-2-a
+ bug_report_name=kevm-bug-transferFrom-failure-2-a
+ eventlog_name=tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k.log --format-failures
Parse command line options                                   =  0.020s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-failure-2-a-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.787s
  New scanner: TRANSFERFROM-FAILURE-2-A-SPEC-RULE-CELLS      =  2.071s
Parse spec modules [1/1 rules]                               =  6.254s
Apply prover steps                                           =  4.590s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-38-516-aa4cb780-e54d-43d4-ac4c-9dd9e4c59839/spec.kore --spec-module TRANSFERFROM-FAILURE-2-A-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-38-516-aa4cb780-e54d-43d4-ac4c-9dd9e4c59839/result.kore
Backend                                                      =  0.925s
Cleanup                                                      =  0.061s
Total                                                        = 13.637s
kevm prove tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-failure-1-c
+ bug_report_name=kevm-bug-transferFrom-failure-1-c
+ eventlog_name=tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-failure-1-c-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.923s
  New scanner: TRANSFERFROM-FAILURE-1-C-SPEC-RULE-CELLS      =  2.380s
Parse spec modules [1/1 rules]                               =  8.149s
Apply prover steps                                           =  4.556s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-36-812-c0043c27-8fec-4034-a72f-d9fcf2c5375f/spec.kore --spec-module TRANSFERFROM-FAILURE-1-C-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-36-812-c0043c27-8fec-4034-a72f-d9fcf2c5375f/result.kore
Backend                                                      =  1.080s
Cleanup                                                      =  0.088s
Total                                                        = 15.817s
kevm prove tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-failure-2-b
+ bug_report_name=kevm-bug-transferFrom-failure-2-b
+ eventlog_name=tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-failure-2-b-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.162s
  New scanner: TRANSFERFROM-FAILURE-2-B-SPEC-RULE-CELLS      =  2.017s
Parse spec modules [1/1 rules]                               =  6.533s
Apply prover steps                                           =  4.528s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-38-765-3881b702-d7e9-4fc3-a4e0-318ad86a9e7e/spec.kore --spec-module TRANSFERFROM-FAILURE-2-B-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-38-765-3881b702-d7e9-4fc3-a4e0-318ad86a9e7e/result.kore
Backend                                                      =  1.094s
Cleanup                                                      =  0.117s
Total                                                        = 14.456s
kevm prove tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-failure-2-c
+ bug_report_name=kevm-bug-transferFrom-failure-2-c
+ eventlog_name=tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k.log --format-failures
Parse command line options                                   =  0.023s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-failure-2-c-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.895s
  New scanner: TRANSFERFROM-FAILURE-2-C-SPEC-RULE-CELLS      =  1.888s
Parse spec modules [1/1 rules]                               =  6.343s
Apply prover steps                                           =  4.494s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-39-156-cb224e90-772a-42bd-a456-15fbc943f6da/spec.kore --spec-module TRANSFERFROM-FAILURE-2-C-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-39-156-cb224e90-772a-42bd-a456-15fbc943f6da/result.kore
Backend                                                      =  1.295s
Cleanup                                                      =  0.102s
Total                                                        = 14.152s
kevm prove tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-failure-1-d
+ bug_report_name=kevm-bug-transferFrom-failure-1-d
+ eventlog_name=tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k.log --format-failures
Parse command line options                                   =  0.024s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-failure-1-d-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.628s
  New scanner: TRANSFERFROM-FAILURE-1-D-SPEC-RULE-CELLS      =  2.070s
Parse spec modules [1/1 rules]                               =  8.766s
Apply prover steps                                           =  5.010s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-37-942-69b49ac1-7dd6-472e-a8a6-9a5c637619df/spec.kore --spec-module TRANSFERFROM-FAILURE-1-D-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-37-942-69b49ac1-7dd6-472e-a8a6-9a5c637619df/result.kore
Backend                                                      =  1.147s
Cleanup                                                      =  0.105s
Total                                                        = 17.680s
kevm prove tests/specs/erc20/ds/transferFrom-success-1-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-success-1-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-success-1-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-success-1-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-success-1-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-success-1
+ bug_report_name=kevm-bug-transferFrom-success-1
+ eventlog_name=tests/specs/erc20/ds/transferFrom-success-1-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-success-1-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-success-1-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-success-1-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.909s
  New scanner: TRANSFERFROM-SUCCESS-1-SPEC-RULE-CELLS        =  2.080s
Parse spec modules [1/1 rules]                               =  8.295s
Apply prover steps                                           =  4.837s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-39-418-3138517f-ef21-4bfe-8999-075df613450e/spec.kore --spec-module TRANSFERFROM-SUCCESS-1-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-39-418-3138517f-ef21-4bfe-8999-075df613450e/result.kore
Backend                                                      =  1.254s
Cleanup                                                      =  0.158s
Total                                                        = 16.474s
kevm prove tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-failure-1-b
+ bug_report_name=kevm-bug-transferFrom-failure-1-b
+ eventlog_name=tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k.log --format-failures
Parse command line options                                   =  0.020s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-failure-1-b-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.708s
  New scanner: TRANSFERFROM-FAILURE-1-B-SPEC-RULE-CELLS      =  2.367s
Parse spec modules [1/1 rules]                               = 14.894s
Apply prover steps                                           =  5.433s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-36-151-14c63b7d-a27d-4cce-b856-afb5a590287e/spec.kore --spec-module TRANSFERFROM-FAILURE-1-B-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-36-151-14c63b7d-a27d-4cce-b856-afb5a590287e/result.kore
Backend                                                      =  1.205s
Cleanup                                                      =  0.101s
Total                                                        = 23.361s
kevm prove tests/specs/erc20/ds/transferFrom-success-2-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transferFrom-success-2-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transferFrom-success-2-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transferFrom-success-2-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transferFrom-success-2-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transferFrom-success-2
+ bug_report_name=kevm-bug-transferFrom-success-2
+ eventlog_name=tests/specs/erc20/ds/transferFrom-success-2-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-success-2-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transferFrom-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transferFrom-success-2-spec.k.log --format-failures
Parse command line options                                   =  0.030s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transferFrom-success-2-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.678s
  New scanner: TRANSFERFROM-SUCCESS-2-SPEC-RULE-CELLS        =  1.881s
Parse spec modules [1/1 rules]                               =  6.334s
Apply prover steps                                           =  5.405s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-46-428-5a5b401e-b7ac-482b-816f-aaf651de9081/spec.kore --spec-module TRANSFERFROM-SUCCESS-2-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-46-428-5a5b401e-b7ac-482b-816f-aaf651de9081/result.kore
Backend                                                      =  1.539s
Cleanup                                                      =  0.146s
Total                                                        = 16.132s
kevm prove tests/specs/erc20/ds/transfer-success-2-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transfer-success-2-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transfer-success-2-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transfer-success-2-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transfer-success-2-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transfer-success-2
+ bug_report_name=kevm-bug-transfer-success-2
+ eventlog_name=tests/specs/erc20/ds/transfer-success-2-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-success-2-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-success-2-spec.k.log --format-failures
Parse command line options                                   =  0.026s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transfer-success-2-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.865s
  New scanner: TRANSFER-SUCCESS-2-SPEC-RULE-CELLS            =  2.067s
Parse spec modules [1/1 rules]                               =  5.547s
Apply prover steps                                           =  5.476s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-53-323-485ba532-d945-4644-a3da-31e31d865ff0/spec.kore --spec-module TRANSFER-SUCCESS-2-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-53-323-485ba532-d945-4644-a3da-31e31d865ff0/result.kore
Backend                                                      =  1.054s
Cleanup                                                      =  0.092s
Total                                                        = 14.060s
kevm prove tests/specs/erc20/hkg/allowance-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/allowance-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/allowance-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/allowance-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/allowance-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/allowance
+ bug_report_name=kevm-bug-allowance
+ eventlog_name=tests/specs/erc20/hkg/allowance-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/allowance-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/allowance-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/allowance-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/allowance-spec.k.log --format-failures
Parse command line options                                   =  0.018s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/allowance-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.819s
  New scanner: ALLOWANCE-SPEC-RULE-CELLS                     =  2.177s
Parse spec modules [1/1 rules]                               =  5.077s
Apply prover steps                                           =  5.351s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-53-726-f5f7cc2a-7ab9-4010-9e61-cf4bca3abbcf/spec.kore --spec-module ALLOWANCE-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-53-726-f5f7cc2a-7ab9-4010-9e61-cf4bca3abbcf/result.kore
Backend                                                      =  0.971s
Cleanup                                                      =  0.101s
Total                                                        = 14.337s
kevm prove tests/specs/erc20/ds/transfer-success-1-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/ds/transfer-success-1-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/ds/transfer-success-1-spec.k
+ shift
+ [[ tests/specs/erc20/ds/transfer-success-1-spec.k == \- ]]
+ [[ -f tests/specs/erc20/ds/transfer-success-1-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/ds/transfer-success-1
+ bug_report_name=kevm-bug-transfer-success-1
+ eventlog_name=tests/specs/erc20/ds/transfer-success-1-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-success-1-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/ds/transfer-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/ds/transfer-success-1-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/ds/transfer-success-1-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.915s
  New scanner: TRANSFER-SUCCESS-1-SPEC-RULE-CELLS            =  2.082s
Parse spec modules [1/1 rules]                               =  6.471s
Apply prover steps                                           =  5.858s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-52-678-e5a6114a-fb3c-4f9a-bdeb-50fa02dd6069/spec.kore --spec-module TRANSFER-SUCCESS-1-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-52-678-e5a6114a-fb3c-4f9a-bdeb-50fa02dd6069/result.kore
Backend                                                      =  1.011s
Cleanup                                                      =  0.109s
Total                                                        = 15.385s
kevm prove tests/specs/erc20/hkg/approve-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/approve-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/approve-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/approve-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/approve-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/approve
+ bug_report_name=kevm-bug-approve
+ eventlog_name=tests/specs/erc20/hkg/approve-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/approve-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/approve-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/approve-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/approve-spec.k.log --format-failures
Parse command line options                                   =  0.033s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/approve-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.935s
  New scanner: APPROVE-SPEC-RULE-CELLS                       =  2.083s
Parse spec modules [1/1 rules]                               =  5.856s
Apply prover steps                                           =  5.327s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-53-865-b21898e1-3e82-4333-8d62-2f2ca9e3113c/spec.kore --spec-module APPROVE-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-53-865-b21898e1-3e82-4333-8d62-2f2ca9e3113c/result.kore
Backend                                                      =  1.046s
Cleanup                                                      =  0.107s
Total                                                        = 14.304s
kevm prove tests/specs/erc20/hkg/balanceOf-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/balanceOf-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/balanceOf-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/balanceOf-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/balanceOf-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/balanceOf
+ bug_report_name=kevm-bug-balanceOf
+ eventlog_name=tests/specs/erc20/hkg/balanceOf-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/balanceOf-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/balanceOf-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/balanceOf-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/balanceOf-spec.k.log --format-failures
Parse command line options                                   =  0.017s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/balanceOf-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.542s
  New scanner: BALANCEOF-SPEC-RULE-CELLS                     =  2.266s
Parse spec modules [1/1 rules]                               =  5.924s
Apply prover steps                                           =  4.831s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-56-234-d770651c-abc4-4c77-ad1d-ff4521c8444a/spec.kore --spec-module BALANCEOF-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-56-234-d770651c-abc4-4c77-ad1d-ff4521c8444a/result.kore
Backend                                                      =  1.278s
Cleanup                                                      =  0.096s
Total                                                        = 13.688s
kevm prove tests/specs/erc20/hkg/totalSupply-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/totalSupply-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/totalSupply-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/totalSupply-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/totalSupply-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/totalSupply
+ bug_report_name=kevm-bug-totalSupply
+ eventlog_name=tests/specs/erc20/hkg/totalSupply-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/totalSupply-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/totalSupply-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/totalSupply-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/totalSupply-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/totalSupply-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.579s
  New scanner: TOTALSUPPLY-SPEC-RULE-CELLS                   =  2.343s
Parse spec modules [1/1 rules]                               =  5.919s
Apply prover steps                                           =  5.190s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-56-399-7b1933f2-9f23-4c39-a24e-6be04b1c4c76/spec.kore --spec-module TOTALSUPPLY-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-44-56-399-7b1933f2-9f23-4c39-a24e-6be04b1c4c76/result.kore
Backend                                                      =  1.322s
Cleanup                                                      =  0.121s
Total                                                        = 14.152s
kevm prove tests/specs/erc20/hkg/transfer-failure-1-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transfer-failure-1-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transfer-failure-1-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transfer-failure-1-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transfer-failure-1-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transfer-failure-1
+ bug_report_name=kevm-bug-transfer-failure-1
+ eventlog_name=tests/specs/erc20/hkg/transfer-failure-1-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-failure-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-failure-1-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-failure-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-failure-1-spec.k.log --format-failures
Parse command line options                                   =  0.021s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transfer-failure-1-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.160s
  New scanner: TRANSFER-FAILURE-1-SPEC-RULE-CELLS            =  1.953s
Parse spec modules [1/1 rules]                               =  5.788s
Apply prover steps                                           =  5.576s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-00-015-f17075cf-299d-4f26-a106-f8ac51612654/spec.kore --spec-module TRANSFER-FAILURE-1-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-00-015-f17075cf-299d-4f26-a106-f8ac51612654/result.kore
Backend                                                      =  1.133s
Cleanup                                                      =  0.122s
Total                                                        = 14.800s
kevm prove tests/specs/erc20/hkg/transfer-failure-2-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transfer-failure-2-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transfer-failure-2-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transfer-failure-2-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transfer-failure-2-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transfer-failure-2
+ bug_report_name=kevm-bug-transfer-failure-2
+ eventlog_name=tests/specs/erc20/hkg/transfer-failure-2-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-failure-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-failure-2-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-failure-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-failure-2-spec.k.log --format-failures
Parse command line options                                   =  0.028s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transfer-failure-2-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.637s
  New scanner: TRANSFER-FAILURE-2-SPEC-RULE-CELLS            =  1.946s
Parse spec modules [1/1 rules]                               =  5.276s
Apply prover steps                                           =  5.496s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-03-383-ad25d069-5dab-4cb7-9c39-0c195171ab3e/spec.kore --spec-module TRANSFER-FAILURE-2-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-03-383-ad25d069-5dab-4cb7-9c39-0c195171ab3e/result.kore
Backend                                                      =  1.279s
Cleanup                                                      =  0.137s
Total                                                        = 13.853s
kevm prove tests/specs/erc20/hkg/transferFrom-failure-2-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transferFrom-failure-2-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transferFrom-failure-2-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transferFrom-failure-2-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transferFrom-failure-2-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transferFrom-failure-2
+ bug_report_name=kevm-bug-transferFrom-failure-2
+ eventlog_name=tests/specs/erc20/hkg/transferFrom-failure-2-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-failure-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-failure-2-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-failure-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-failure-2-spec.k.log --format-failures
Parse command line options                                   =  0.027s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transferFrom-failure-2-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.064s
  New scanner: TRANSFERFROM-FAILURE-2-SPEC-RULE-CELLS        =  1.914s
Parse spec modules [1/1 rules]                               =  5.704s
Apply prover steps                                           =  5.083s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-08-687-0a7debe9-3f3a-464d-87f0-4982e32ad535/spec.kore --spec-module TRANSFERFROM-FAILURE-2-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-08-687-0a7debe9-3f3a-464d-87f0-4982e32ad535/result.kore
Backend                                                      =  0.982s
Cleanup                                                      =  0.073s
Total                                                        = 13.933s
kevm prove tests/specs/erc20/hkg/transferFrom-failure-1-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transferFrom-failure-1-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transferFrom-failure-1-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transferFrom-failure-1-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transferFrom-failure-1-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transferFrom-failure-1
+ bug_report_name=kevm-bug-transferFrom-failure-1
+ eventlog_name=tests/specs/erc20/hkg/transferFrom-failure-1-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-failure-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-failure-1-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-failure-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-failure-1-spec.k.log --format-failures
Parse command line options                                   =  0.030s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transferFrom-failure-1-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.043s
  New scanner: TRANSFERFROM-FAILURE-1-SPEC-RULE-CELLS        =  1.933s
Parse spec modules [1/1 rules]                               =  6.987s
Apply prover steps                                           =  4.825s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-07-845-ea68d412-d64e-4daa-ad17-32b94751a9a6/spec.kore --spec-module TRANSFERFROM-FAILURE-1-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-07-845-ea68d412-d64e-4daa-ad17-32b94751a9a6/result.kore
Backend                                                      =  0.978s
Cleanup                                                      =  0.089s
Total                                                        = 14.952s
kevm prove tests/specs/erc20/hkg/transferFrom-success-2-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transferFrom-success-2-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transferFrom-success-2-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transferFrom-success-2-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transferFrom-success-2-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transferFrom-success-2
+ bug_report_name=kevm-bug-transferFrom-success-2
+ eventlog_name=tests/specs/erc20/hkg/transferFrom-success-2-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-success-2-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-success-2-spec.k.log --format-failures
Parse command line options                                   =  0.042s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transferFrom-success-2-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.066s
  New scanner: TRANSFERFROM-SUCCESS-2-SPEC-RULE-CELLS        =  1.937s
Parse spec modules [1/1 rules]                               =  6.343s
Apply prover steps                                           =  4.800s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-08-851-f726fa8a-b183-4285-abce-3c5f845f2cbd/spec.kore --spec-module TRANSFERFROM-SUCCESS-2-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-08-851-f726fa8a-b183-4285-abce-3c5f845f2cbd/result.kore
Backend                                                      =  1.014s
Cleanup                                                      =  0.104s
Total                                                        = 14.369s
kevm prove tests/specs/erc20/hkg/transfer-success-2-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transfer-success-2-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transfer-success-2-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transfer-success-2-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transfer-success-2-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transfer-success-2
+ bug_report_name=kevm-bug-transfer-success-2
+ eventlog_name=tests/specs/erc20/hkg/transfer-success-2-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-success-2-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-success-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-success-2-spec.k.log --format-failures
Parse command line options                                   =  0.025s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transfer-success-2-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.530s
  New scanner: TRANSFER-SUCCESS-2-SPEC-RULE-CELLS            =  2.528s
Parse spec modules [1/1 rules]                               =  5.990s
Apply prover steps                                           =  5.024s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-11-212-e0b350aa-d2ab-4e32-ac8a-283e55fe1959/spec.kore --spec-module TRANSFER-SUCCESS-2-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-11-212-e0b350aa-d2ab-4e32-ac8a-283e55fe1959/result.kore
Backend                                                      =  1.224s
Cleanup                                                      =  0.105s
Total                                                        = 13.898s
kevm prove tests/specs/erc20/hkg/transferFrom-success-1-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transferFrom-success-1-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transferFrom-success-1-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transferFrom-success-1-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transferFrom-success-1-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transferFrom-success-1
+ bug_report_name=kevm-bug-transferFrom-success-1
+ eventlog_name=tests/specs/erc20/hkg/transferFrom-success-1-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-success-1-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transferFrom-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transferFrom-success-1-spec.k.log --format-failures
Parse command line options                                   =  0.032s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transferFrom-success-1-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  2.087s
  New scanner: TRANSFERFROM-SUCCESS-1-SPEC-RULE-CELLS        =  1.798s
Parse spec modules [1/1 rules]                               =  9.021s
Apply prover steps                                           =  4.813s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-08-789-d614e154-39ed-4131-b2e9-52171e8cd7d8/spec.kore --spec-module TRANSFERFROM-SUCCESS-1-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-08-789-d614e154-39ed-4131-b2e9-52171e8cd7d8/result.kore
Backend                                                      =  1.352s
Cleanup                                                      =  0.101s
Total                                                        = 17.406s
make -C ./kevm_pyk venv-prod
make[1]: Entering directory '/home/radu/work/evm-semantics/kevm_pyk'
virtualenv -p python3.8 venv-prod \
&& . venv-prod/bin/activate                         \
&& pip install -r requirements/base.txt     \
&& pip install . --no-deps
RuntimeError: failed to find interpreter for Builtin discover of python_spec='python3.8'
make[1]: *** [Makefile:29: venv-prod/pyvenv.cfg] Error 1
make[1]: Leaving directory '/home/radu/work/evm-semantics/kevm_pyk'
make: *** [Makefile:436: kevm-pyk-venv] Error 2
make: *** Waiting for unfinished jobs....
kevm prove tests/specs/erc20/hkg/transfer-success-1-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/erc20/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/erc20/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/erc20/hkg/transfer-success-1-spec.k --format-failures
+ backend_dir=tests/specs/erc20/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/erc20/hkg/transfer-success-1-spec.k
+ shift
+ [[ tests/specs/erc20/hkg/transfer-success-1-spec.k == \- ]]
+ [[ -f tests/specs/erc20/hkg/transfer-success-1-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/erc20/hkg/transfer-success-1
+ bug_report_name=kevm-bug-transfer-success-1
+ eventlog_name=tests/specs/erc20/hkg/transfer-success-1-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-success-1-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/erc20/verification/haskell tests/specs/erc20/hkg/transfer-success-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/erc20/hkg/transfer-success-1-spec.k.log --format-failures
Parse command line options                                   =  0.030s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/hkg/transfer-success-1-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/erc20/evm-symbolic.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/infinite-gas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Outer parsing [100 modules]                                  =  1.785s
  New scanner: TRANSFER-SUCCESS-1-SPEC-RULE-CELLS            =  2.369s
Parse spec modules [1/1 rules]                               =  7.212s
Apply prover steps                                           =  5.462s
kore-exec /home/radu/work/evm-semantics/./tests/specs/erc20/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-10-465-bc980663-3dc6-442c-9d8a-2173cd861fbe/spec.kore --spec-module TRANSFER-SUCCESS-1-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-10-465-bc980663-3dc6-442c-9d8a-2173cd861fbe/result.kore
Backend                                                      =  1.354s
Cleanup                                                      =  0.086s
Total                                                        = 15.929s
kevm prove tests/specs/bihu/forwardToHotWallet-failure-1-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/bihu/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/bihu/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/bihu/forwardToHotWallet-failure-1-spec.k --format-failures
+ backend_dir=tests/specs/bihu/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/bihu/forwardToHotWallet-failure-1-spec.k
+ shift
+ [[ tests/specs/bihu/forwardToHotWallet-failure-1-spec.k == \- ]]
+ [[ -f tests/specs/bihu/forwardToHotWallet-failure-1-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/bihu/forwardToHotWallet-failure-1
+ bug_report_name=kevm-bug-forwardToHotWallet-failure-1
+ eventlog_name=tests/specs/bihu/forwardToHotWallet-failure-1-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-1-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-1-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-1-spec.k.log --format-failures
Parse command line options                                   =  0.028s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/forwardToHotWallet-failure-1-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [95 modules]                                   =  2.196s
  New scanner: FORWARDTOHOTWALLET-FAILURE-1-SPEC-RULE-CELLS  =  2.090s
Parse spec modules [1/1 rules]                               =  5.100s
Apply prover steps                                           =  4.878s
kore-exec /home/radu/work/evm-semantics/./tests/specs/bihu/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-15-552-7ed7c1c2-fbdb-4276-ae26-8bbbd76785ba/spec.kore --spec-module FORWARDTOHOTWALLET-FAILURE-1-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-15-552-7ed7c1c2-fbdb-4276-ae26-8bbbd76785ba/result.kore
Backend                                                      =  0.842s
Cleanup                                                      =  0.104s
Total                                                        = 13.148s
kevm prove tests/specs/bihu/forwardToHotWallet-failure-2-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/bihu/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/bihu/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/bihu/forwardToHotWallet-failure-2-spec.k --format-failures
+ backend_dir=tests/specs/bihu/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/bihu/forwardToHotWallet-failure-2-spec.k
+ shift
+ [[ tests/specs/bihu/forwardToHotWallet-failure-2-spec.k == \- ]]
+ [[ -f tests/specs/bihu/forwardToHotWallet-failure-2-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/bihu/forwardToHotWallet-failure-2
+ bug_report_name=kevm-bug-forwardToHotWallet-failure-2
+ eventlog_name=tests/specs/bihu/forwardToHotWallet-failure-2-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-2-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-2-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-2-spec.k.log --format-failures
Parse command line options                                   =  0.027s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/forwardToHotWallet-failure-2-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [95 modules]                                   =  1.428s
  New scanner: FORWARDTOHOTWALLET-FAILURE-2-SPEC-RULE-CELLS  =  1.869s
Parse spec modules [1/1 rules]                               =  5.264s
Apply prover steps                                           =  4.694s
kore-exec /home/radu/work/evm-semantics/./tests/specs/bihu/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-18-074-37f1eb1c-83e9-428e-997b-ca202b6e9a80/spec.kore --spec-module FORWARDTOHOTWALLET-FAILURE-2-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-18-074-37f1eb1c-83e9-428e-997b-ca202b6e9a80/result.kore
Backend                                                      =  0.889s
Cleanup                                                      =  0.115s
Total                                                        = 12.417s
kevm prove tests/specs/bihu/functional-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/bihu/functional-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/bihu/functional-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/bihu/functional-spec.k --format-failures
+ backend_dir=tests/specs/bihu/functional-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/bihu/functional-spec.k
+ shift
+ [[ tests/specs/bihu/functional-spec.k == \- ]]
+ [[ -f tests/specs/bihu/functional-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/bihu/functional
+ bug_report_name=kevm-bug-functional
+ eventlog_name=tests/specs/bihu/functional-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/bihu/functional-spec/haskell tests/specs/bihu/functional-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/functional-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/bihu/functional-spec/haskell tests/specs/bihu/functional-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/functional-spec.k.log --format-failures
Parse command line options                                   =  0.019s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/functional-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [96 modules]                                   =  2.035s
  New scanner: FUNCTIONAL-SPEC-RULE-CELLS                    =  1.572s
Parse spec modules [1/1 rules]                               =  3.262s
Apply prover steps                                           =  4.202s
kore-exec /home/radu/work/evm-semantics/./tests/specs/bihu/functional-spec/haskell/functional-spec-kompiled/definition.kore --module FUNCTIONAL-SPEC-SYNTAX --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-23-815-cee3b893-069e-4ee5-9566-117c10624ba8/spec.kore --spec-module FUNCTIONAL-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-23-815-cee3b893-069e-4ee5-9566-117c10624ba8/result.kore
Backend                                                      =  0.765s
Cleanup                                                      =  0.066s
Total                                                        = 10.349s
kevm prove tests/specs/bihu/forwardToHotWallet-failure-4-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/bihu/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/bihu/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/bihu/forwardToHotWallet-failure-4-spec.k --format-failures
+ backend_dir=tests/specs/bihu/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/bihu/forwardToHotWallet-failure-4-spec.k
+ shift
+ [[ tests/specs/bihu/forwardToHotWallet-failure-4-spec.k == \- ]]
+ [[ -f tests/specs/bihu/forwardToHotWallet-failure-4-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/bihu/forwardToHotWallet-failure-4
+ bug_report_name=kevm-bug-forwardToHotWallet-failure-4
+ eventlog_name=tests/specs/bihu/forwardToHotWallet-failure-4-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-4-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-4-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-4-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-4-spec.k.log --format-failures
Parse command line options                                   =  0.024s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/forwardToHotWallet-failure-4-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [95 modules]                                   =  1.842s
  New scanner: FORWARDTOHOTWALLET-FAILURE-4-SPEC-RULE-CELLS  =  1.686s
Parse spec modules [1/1 rules]                               =  5.025s
Apply prover steps                                           =  3.705s
kore-exec /home/radu/work/evm-semantics/./tests/specs/bihu/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-23-366-025b6946-37f4-4af1-b2e0-199aaffd9c67/spec.kore --spec-module FORWARDTOHOTWALLET-FAILURE-4-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-23-366-025b6946-37f4-4af1-b2e0-199aaffd9c67/result.kore
Backend                                                      =  0.704s
Cleanup                                                      =  0.069s
Total                                                        = 11.369s
kevm prove tests/specs/bihu/forwardToHotWallet-failure-3-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/bihu/verification/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/bihu/verification/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/bihu/forwardToHotWallet-failure-3-spec.k --format-failures
+ backend_dir=tests/specs/bihu/verification/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/bihu/forwardToHotWallet-failure-3-spec.k
+ shift
+ [[ tests/specs/bihu/forwardToHotWallet-failure-3-spec.k == \- ]]
+ [[ -f tests/specs/bihu/forwardToHotWallet-failure-3-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/bihu/forwardToHotWallet-failure-3
+ bug_report_name=kevm-bug-forwardToHotWallet-failure-3
+ eventlog_name=tests/specs/bihu/forwardToHotWallet-failure-3-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-3-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-3-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/bihu/verification/haskell tests/specs/bihu/forwardToHotWallet-failure-3-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/bihu/forwardToHotWallet-failure-3-spec.k.log --format-failures
Parse command line options                                   =  0.022s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/forwardToHotWallet-failure-3-spec.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/bihu/verification.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [95 modules]                                   =  1.881s
  New scanner: FORWARDTOHOTWALLET-FAILURE-3-SPEC-RULE-CELLS  =  1.679s
Parse spec modules [1/1 rules]                               =  5.009s
Apply prover steps                                           =  3.905s
kore-exec /home/radu/work/evm-semantics/./tests/specs/bihu/verification/haskell/verification-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-23-159-c01550c8-6585-4561-8df7-1485d54f459a/spec.kore --spec-module FORWARDTOHOTWALLET-FAILURE-3-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-23-159-c01550c8-6585-4561-8df7-1485d54f459a/result.kore
Backend                                                      =  0.792s
Cleanup                                                      =  0.070s
Total                                                        = 11.679s
kevm prove tests/specs/examples/sum-to-n-spec.k  --backend haskell --format-failures  \
    --directory tests/specs/examples/sum-to-n-spec/haskell
+ shopt -s extglob
+ debug=false
+ profile=false
+ KEVM=kevm
+++ dirname /home/radu/work/evm-semantics/.build/usr/bin/kevm
++ cd /home/radu/work/evm-semantics/.build/usr/bin
++ pwd
+ INSTALL_BIN=/home/radu/work/evm-semantics/.build/usr/bin
++ dirname /home/radu/work/evm-semantics/.build/usr/bin
+ INSTALL_LIB=/home/radu/work/evm-semantics/.build/usr/lib/kevm
+ INSTALL_INCLUDE=/home/radu/work/evm-semantics/.build/usr/lib/kevm/include
+ install_k_bin=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin
+ install_k_lib=/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/lib
+ plugin_include=/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include
+ libff_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/libff
+ libcryptopp_dir=/home/radu/work/evm-semantics/.build/usr/lib/kevm/cryptopp
+ export PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ PATH=/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/usr/bin:/home/radu/work/evm-semantics/.build/usr/lib/kevm/kframework/bin:/home/radu/work/evm-semantics/.build/local/bin:/home/radu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/radu/work/k/k-distribution/target/release/k/bin:/home/radu/work/z3/build:/snap/bin
+ export LD_LIBRARY_PATH=:/usr/local/lib
+ LD_LIBRARY_PATH=:/usr/local/lib
+ export 'K_OPTS=-Xmx16G -Xss512m'
+ K_OPTS='-Xmx16G -Xss512m'
+ export 'KLAB_OUT=~/.klab'
+ KLAB_OUT='~/.klab'
+ run_command=prove
+ shift
+ [[ prove == \h\e\l\p ]]
+ [[ prove == \-\-\h\e\l\p ]]
+ [[ prove == \v\e\r\s\i\o\n ]]
+ [[ prove == \-\-\v\e\r\s\i\o\n ]]
+ backend=llvm
+ dump=false
+ unparse=true
+ debugger=false
+ profile_haskell=false
+ profile_timeout=0
+ kore_prof_args=
+ bug_report=false
+ mode=NORMAL
+ schedule=LONDON
+ chainid=1
+ concrete_rules_file=
+ provex=true
+ verif_module=VERIFICATION
+ pyk_minimize=false
+ pyk_omit_labels=
+ max_counterexamples=
+ branching_allowed=
+ haskell_backend_command=(kore-exec)
+ [[ ! prove == \p\r\o\v\e ]]
+ backend=haskell
+ [[ ! prove == \s\o\l\c\-\t\o\-\k ]]
+ kevm_port=8545
+ kevm_host=127.0.0.1
+ args=()
+ [[ 6 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 5 -gt 0 ]]
+ case "$1" in
+ backend=haskell
+ shift 2
+ [[ 3 -gt 0 ]]
+ case "$1" in
+ args+=("$1")
+ shift
+ [[ 2 -gt 0 ]]
+ case "$1" in
+ backend_dir=tests/specs/examples/sum-to-n-spec/haskell
+ shift 2
+ [[ 0 -gt 0 ]]
+ [[ 2 -le 0 ]]
+ set -- tests/specs/examples/sum-to-n-spec.k --format-failures
+ backend_dir=tests/specs/examples/sum-to-n-spec/haskell
+ false
+ [[ 0 = \0 ]]
+ [[ '' = '' ]]
+ false
+ [[ ! -z '' ]]
+ run_file=tests/specs/examples/sum-to-n-spec.k
+ shift
+ [[ tests/specs/examples/sum-to-n-spec.k == \- ]]
+ [[ -f tests/specs/examples/sum-to-n-spec.k ]]
+ cMODE_kore='LblNORMAL{}()'
+ cSCHEDULE_kore='LblLONDON'\''Unds'\''EVM{}()'
+ cCHAINID_kore='\dv{SortInt{}}("1")'
+ cMODE_kast='`NORMAL`(.KList)'
+ cSCHEDULE_kast='`LONDON_EVM`(.KList)'
+ cCHAINID_kast='#token("1","Int")'
+ false
+ case "$run_command-$backend" in
+ run_prove --format-failures
+ local def_module run_dir proof_args bug_report_name eventlog_name kprove omit_cells omit_labels klab_log pyk_args
+ check_k_install
+ which kast
+ which krun
++ basename tests/specs/examples/sum-to-n
+ bug_report_name=kevm-bug-sum-to-n
+ eventlog_name=tests/specs/examples/sum-to-n-spec.k.eventlog
+ kprove=kprove
+ proof_args=(--directory "${backend_dir}" "${run_file}")
+ proof_args+=(-I "${INSTALL_INCLUDE}/kframework" -I "${plugin_include}/kframework")
+ proof_args+=(-v --dry-run --profile-rule-parsing "timings/${run_file}.log")
+ true
+ kprove=kprovex
+ true
+ false
+ [[ ! -f '' ]]
+ case "${backend}" in
+ false
+ false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ false
+ [[ 1 -le 1 ]]
+ false
+ false
+ execute kprovex --directory tests/specs/examples/sum-to-n-spec/haskell tests/specs/examples/sum-to-n-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/examples/sum-to-n-spec.k.log --format-failures
+ false
+ kprovex --directory tests/specs/examples/sum-to-n-spec/haskell tests/specs/examples/sum-to-n-spec.k -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework -I /home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework -v --dry-run --profile-rule-parsing timings/tests/specs/examples/sum-to-n-spec.k.log --format-failures
Parse command line options                                   =  0.026s
Importing: Source(/home/radu/work/evm-semantics/tests/specs/examples/sum-to-n-spec.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/asm.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/lemmas.k)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/data.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/evm-types.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/json-rpc.md)
Importing: Source(/home/radu/work/k/k-distribution/target/release/k/include/kframework/builtin/json.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/serialization.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/blockchain-k-plugin/include/kframework/krypto.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/network.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/edsl.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/buf.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/hashed-locations.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/abi.md)
Importing: Source(/home/radu/work/evm-semantics/.build/usr/lib/kevm/include/kframework/optimizations.md)
Importing: Source(/home/radu/work/evm-semantics/tests/specs/int-simplification.k)
Outer parsing [96 modules]                                   =  1.511s
  New scanner: SUM-TO-N-SPEC-RULE-CELLS                      =  1.964s
Parse spec modules [2/2 rules]                               =  3.898s
Apply prover steps                                           =  3.652s
kore-exec /home/radu/work/evm-semantics/./tests/specs/examples/sum-to-n-spec/haskell/sum-to-n-spec-kompiled/definition.kore --module VERIFICATION --prove /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-25-760-9ecb47ee-fc69-47e1-b8aa-f34796102653/spec.kore --spec-module SUM-TO-N-SPEC --output /home/radu/work/evm-semantics/./.kprove-2022-04-13-15-45-25-760-9ecb47ee-fc69-47e1-b8aa-f34796102653/result.kore
Backend                                                      =  0.685s
Cleanup                                                      =  0.046s
Total                                                        =  9.818s

real	2m17,795s
user	51m30,253s
sys	1m10,270s
